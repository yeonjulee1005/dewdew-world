---
interface Props {
  giscusId: string
  giscusCategory: string
  giscusCategoryId: string
}

const {
  giscusId,
  giscusCategory,
  giscusCategoryId
} = Astro.props

const locale = Astro.currentLocale as string;

// 개발 환경 감지
const isDev = import.meta.env.DEV;
---

{!isDev && (
  <giscus-widget
    is:inline
    id={giscusId}
    repo="yeonjulee1005/dewdew-world"
    repoid="R_kgDOLF55BQ"
    category={giscusCategory}
    categoryid={giscusCategoryId}
    mapping="pathname"
    strict="0"
    reactionsenabled="1"
    emitmetadata="0"
    inputposition="top"
    theme="light_protanopia"
    lang={locale}
    loading="eager"
    crossorigin="anonymous"
    async
    >
  </giscus-widget>
)}

{isDev && (
  <div class="p-4 border-2 border-dashed border-gray-300 rounded-lg text-center text-gray-500">
    <p>💬 댓글 기능</p>
    <p class="text-sm">개발 환경에서는 댓글이 표시되지 않습니다.</p>
    <p class="text-xs">배포 후 확인해주세요.</p>
  </div>
)}

<script>
  import 'giscus'
  
  // URL 정규화 (개발 및 프로덕션 환경 모두)
  const normalizeURL = () => {
    const originalURL = window.location.href;
    const url = new URL(originalURL);
    
    // pathname에서 locale 경로와 .mdx 확장자 제거
    let cleanPathname = url.pathname
      .replace(/\.mdx\/?/g, '/')
      .replace(/^\/(en|ko)/, '');
    
    // 정규화된 URL 생성
    const cleanURL = `${url.origin}${cleanPathname}${url.search}${url.hash}`;
    
    // 디버깅용 로그 (개발 환경에서만)
    if (import.meta.env.DEV) {
      console.log('Original URL:', originalURL);
      console.log('Clean URL:', cleanURL);
      console.log('Original pathname:', url.pathname);
      console.log('Clean pathname:', cleanPathname);
    }
    
    if (originalURL !== cleanURL) {
      // URL을 정규화된 버전으로 업데이트
      window.history.replaceState({}, '', cleanURL);
      return cleanURL;
    }
    return originalURL;
  };

  // 페이지 로드 시 URL 정규화
  normalizeURL();
</script>