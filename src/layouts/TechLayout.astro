---
import { ClientRouter } from 'astro:transitions'
import { Image } from 'astro:assets'
import { getCollection } from 'astro:content'

import Desktop from '@components/header/Desktop.astro'
import Mobile from '@components/header/Mobile.astro'
import Footer from '@components/Footer.astro'
import Head from '@components/Head.astro'
import Author from '@components/tech/Author.astro'
import Link from '@components/Link.astro'
import Comment from '@components/tech/Comment.astro'
import BottomNavigation from '@components/tech/BottomNavigation.astro'

import { MENU_ITEMS } from '../i18n/consts'
import { type Lang } from '../i18n'
import type { lazy } from 'astro:schema'

const locale = Astro.currentLocale as Lang;

interface TechLayoutProps {
  frontmatter: {
    title: string
    description: string
    author: string
    publishedDate: Date
    tags: string[]
    authorContact: string
    avatar: string
    avatarAlt: string
    cover: string
    coverAlt: string
  }
  minutes: {
    readMinutes: string
  }
}

let { frontmatter, minutes } = Astro.props as TechLayoutProps

// const formattedDate = new Date(frontmatter.publishedDate).toLocaleDateString('en-us',
//   { year: 'numeric', month: 'short', day: 'numeric', },
// )

let techCollection = (await getCollection('tech'))
  .filter((tech) => {
    const techLang = tech.id.split('/')[0];
    return tech.data.isDraft && techLang === locale;
  })
  .sort((a, b) => 
    new Date(b.data.publishedDate).valueOf() - 
    new Date(a.data.publishedDate).valueOf()
  );

const techIndex = techCollection.findIndex((tech) => {
  const slug = tech.id.split('/')[1];
  // Astro.params 또는 URL pathname을 사용하여 더 안정적으로 슬러그 추출
  const currentSlug = Astro.params.slug || new URL(Astro.request.url).pathname.split('/').filter(Boolean).pop();
  return slug === currentSlug;
})

const replaceImageAlt = (imageAlt: string) => {
  return imageAlt.replace(/(image|photo|picture)\s?/gi, '')
}

const nextTech = techCollection[techIndex - 1]
const prevTech = techCollection[techIndex + 1]
---
<html lang={locale}>
  <head>
    <Head title={frontmatter.title} description={frontmatter.description} image={frontmatter.cover} />
    <ClientRouter fallback="swap" />
  </head>
  <body>
    <Desktop />
    <Mobile />
    <main class='flex flex-col items-center my-2 sm:my-16'>
      <div class='w-screen px-4 sm:px-8 my-10 lg:w-[800px] lg:px-0'>
        <p class='mb-4 sm:mb-8 text-4xl font-bold'>
          {frontmatter.title}
        </p>
        <p class='mb-2 sm:mb-4 text-lg text-rose-400'>
          {frontmatter.description}
        </p>
        {frontmatter.tags.map((tag) => (
          <Link
            link={`https://www.google.com/search?q=${tag}`}
            text={tag}
            customClass='cursor-pointer inline-block mr-2 my-1 px-2 py-1 text-xs font-semibold text-neutral-50 bg-red-400 rounded hover:bg-red-500 hover:text-neutral-50 hover:transition-colors duration-300 ease-out'
            target='_blank'
            label='tag'
          />
        ))}
        <Author
          authorClass='flex items-center gap-2 my-4 sm:my-10 pt-4 border-t border-neutral-700'
          author={frontmatter.author}
          avatar={frontmatter.avatar}
          avatarAlt={frontmatter.avatarAlt}
          publishedDate={frontmatter.publishedDate}
          minutes={minutes}
        />
        <Image
          src={frontmatter.cover}
          class='rounded-md w-full h-[200px] md:h-[240px] lg:h-[300px] object-cover my-4 shadow-lg shadow-neutral-400'
          alt={replaceImageAlt(frontmatter.coverAlt)}
          width={800}
          height={400}
          quality={80}
          loading='lazy'
        />
        <br />
        <article>
          <slot />
        </article>
      </div>
      <div class='mb-10 px-0 w-11/12 md:w-[750px]'>
        <div class='mt-10 flex w-full flex-col gap-4 sm:flex-row sm:gap-6'>
          {
            nextTech && (
              <BottomNavigation
                link={`/${locale}/tech/${nextTech.id.split('/')[1]}`}
                linkLabel='Next post'
                imageSrc={nextTech.data.cover}
                imageAlt={replaceImageAlt(frontmatter.coverAlt)}
                text={MENU_ITEMS[locale as keyof typeof MENU_ITEMS].techText.nextPost}
                postTitle={nextTech.data.title}
              />
            )
          }
          {
            prevTech && (
              <BottomNavigation
                link={`/${locale}/tech/${prevTech.id.split('/')[1]}`}
                linkLabel='Prev post'
                imageSrc={prevTech.data.cover}
                imageAlt={replaceImageAlt(frontmatter.coverAlt)}
                text={MENU_ITEMS[locale as keyof typeof MENU_ITEMS].techText.prevPost}
                postTitle={prevTech.data.title}
              />
            )
          }
        </div>
      </div>
      <div class='w-screen px-4 sm:px-8 lg:w-[800px] lg:px-0'>
        <Comment lazy />
      </div>
    </main>
  </body>
  <Footer />
</html>


